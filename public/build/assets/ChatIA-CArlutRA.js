class l{constructor(){this.elements={chatMessages:null,messageInput:null,form:null,sendButton:null},this.activeIntervals=[],this.cleanup=this.cleanup.bind(this),this.init=this.init.bind(this)}initializeElements(){this.elements={chatMessages:document.getElementById("chat-messages"),messageInput:document.getElementById("message"),form:document.getElementById("chat-form"),sendButton:document.getElementById("send-button")}}init(){try{if(this.initializeElements(),!this.elements.form)throw new Error("Chat form not found");this.fetchInitialConversation(),this.elements.messageInput.disabled=!0,this.elements.sendButton.disabled=!0}catch(e){console.error("Initialization error:",e),this.showError("Error al inicializar el chat: "+e.message)}}showError(e){typeof Swal<"u"?Swal.fire({icon:"error",title:"Error",text:e,customClass:{container:"z-50"}}):alert("Error: "+e)}async fetchInitialConversation(){await this.showTypingIndicator(this.elements.chatMessages);try{const e=await fetch("/chatbot/start",{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":document.querySelector('meta[name="csrf-token"]').getAttribute("content")},body:JSON.stringify({})});if(!e.ok){const n=await e.json();throw new Error(n.message||"Error al obtener la conversación inicial del servidor.")}const t=await e.json();this.removeTypingIndicator(),await this.renderChatResponse(t)}catch(e){this.removeTypingIndicator(),console.error("Error al iniciar conversación con el backend:",e),this.showError(`Error: ${e.message}`)}}async renderChatResponse(e){const t=this.elements.chatMessages;if(e.html){const n=document.createElement("div");n.innerHTML=e.html,t.appendChild(n.firstChild)}else e.message&&console.warn("Received a plain message. Consider rendering all chat bubbles via backend HTML.");e.type==="action_buttons"&&e.buttons?await this.appendActionButtons(e.buttons):e.type==="module_select"?await this.appendModuleSelect():e.type==="machine_selection"&&e.data&&e.data.machines,t.scrollTop=t.scrollHeight}async appendActionButtons(e){const t=this.elements.chatMessages,n=document.createElement("div");n.className="flex flex-col sm:flex-row w-full gap-2 mt-3 mb-4",n.setAttribute("data-ui-type","action-buttons"),e.forEach(i=>{const s=document.createElement("button");s.id=i.id,s.className=`w-full sm:w-auto ${i.class} text-white font-bold py-2 px-4 rounded transition-colors`,s.textContent=i.text,s.onclick=async()=>{n.querySelectorAll("button").forEach(a=>{a.disabled=!0,a.classList.add("opacity-50","cursor-not-allowed")}),n.remove();const o=await this.renderUserActionAsBubble(i.text);if(o){const a=document.createElement("div");a.innerHTML=o,t.appendChild(a.firstChild),t.scrollTop=t.scrollHeight}i.id==="btn-crear-ticket"?await this.sendActionToBackend("/chatbot/create-ticket-flow"):i.id==="btn-seguimiento-ticket"&&await this.sendActionToBackend("/chatbot/track-ticket-flow")},n.appendChild(s)}),t.appendChild(n),t.scrollTop=t.scrollHeight}async appendModuleSelect(){const e=this.elements.chatMessages,t=document.createElement("div");t.className="select2-container-wrapper flex flex-col w-full max-w-[320px] mb-4 mt-3",t.innerHTML=`
            <select id="modulo-seguimiento" class="w-full"></select>
        `,e.appendChild(t),e.scrollTop=e.scrollHeight,typeof initializeModuloSelect2=="function"?initializeModuloSelect2(document.getElementById("modulo-seguimiento"),this):console.error("initializeModuloSelect2 function is not defined. Make sure select2Modulo.js is loaded.")}async renderUserActionAsBubble(e){try{const t=await fetch("/chatbot/render-user-bubble",{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":document.querySelector('meta[name="csrf-token"]').getAttribute("content")},body:JSON.stringify({message:`${e}`})});if(!t.ok){const i=await t.json();throw new Error(i.message||"Error al renderizar la burbuja del usuario.")}return(await t.json()).html}catch(t){return console.error("Error al obtener la burbuja del usuario desde el backend:",t),null}}async sendActionToBackend(e,t={}){await this.showTypingIndicator(this.elements.chatMessages);try{const n=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":document.querySelector('meta[name="csrf-token"]').getAttribute("content")},body:JSON.stringify(t)});if(!n.ok){const s=await n.json();throw new Error(s.message||`Error al procesar la acción en ${e}.`)}const i=await n.json();this.removeTypingIndicator(),await this.renderChatResponse(i)}catch(n){this.removeTypingIndicator(),console.error(`Error en la acción ${e}:`,n),this.showError(`Error al procesar tu solicitud: ${n.message}`)}}async showTypingIndicator(e){this.removeTypingIndicator();const t=document.createElement("div");if(t.id="typing-indicator",t.className="text-left mb-4 flex items-center gap-2 text-gray-500 dark:text-gray-400",t.innerHTML=`
            <div class="relative w-10 h-10 overflow-hidden bg-gray-100 rounded-full dark:bg-gray-600 flex-shrink-0">
                <img class="w-10 h-10 p-1 rounded-full ring-2 ring-blue-300 dark:ring-blue-500"
                    src="/images/Avatar.webp"
                    alt="AI Avatar">
            </div>
            <span class="bg-gray-200 dark:bg-gray-700 dark:text-white p-3 rounded-lg inline-block max-w-[70%] animate-pulse">El asistente está escribiendo<span class="dot-animation">.</span><span class="dot-animation">.</span><span class="dot-animation">.</span></span>
        `,e.appendChild(t),e.scrollTop=e.scrollHeight,!document.getElementById("typing-animation-styles")){const n=document.createElement("style");n.id="typing-animation-styles",n.innerHTML=`
                @keyframes blink {
                    0%, 100% { opacity: 0; }
                    50% { opacity: 1; }
                }
                .dot-animation:nth-child(1) { animation: blink 1s infinite; }
                .dot-animation:nth-child(2) { animation: blink 1s infinite 0.2s; }
                .dot-animation:nth-child(3) { animation: blink 1s infinite 0.4s; }
            `,document.head.appendChild(n)}}removeTypingIndicator(){const e=document.getElementById("typing-indicator");e&&e.remove()}cleanup(){}}document.addEventListener("DOMContentLoaded",()=>{new l().init()});
